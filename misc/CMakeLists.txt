project(libmisc-library C)

set(LIBMISC_PUBLIC_INCLUDE_DIRS
  ${CMAKE_SOURCE_DIR}/include
  CACHE INTERNAL "libmisc public include directories"
)

set(LIBMISC_PRIVATE_INCLUDE_DIRS
  ${CMAKE_BINARY_DIR}
  ${OPENSSL_INCLUDE_DIRS}
)

set(LIBMISC_LINK_LIBRARIES
  ${LIBMISC_REQUIRED_LIBRARIES}
)

if (WIN32)
  set(LIBMISC_LINK_LIBRARIES
    ${LIBMISC_LINK_LIBRARIES}
    ws2_32
  )
endif (WIN32)

if (HAVE_LIBSOCKET)
  set(LIBMISC_LINK_LIBRARIES
    ${LIBMISC_LINK_LIBRARIES}
    socket
  )
endif (HAVE_LIBSOCKET)

if (OPENSSL_LIBRARIES)
  set(LIBMISC_PRIVATE_INCLUDE_DIRS
    ${LIBMISC_PRIVATE_INCLUDE_DIRS}
    ${OPENSSL_INCLUDE_DIRS}
  )

  set(LIBMISC_LINK_LIBRARIES
    ${LIBMISC_LINK_LIBRARIES}
    ${OPENSSL_LIBRARIES}
  )
endif (OPENSSL_LIBRARIES)

if (GCRYPT_LIBRARY)
  set(LIBMISC_PRIVATE_INCLUDE_DIRS
    ${LIBMISC_PRIVATE_INCLUDE_DIRS}
    ${GCRYPT_INCLUDE_DIR}
  )

  set(LIBMISC_LINK_LIBRARIES
    ${LIBMISC_LINK_LIBRARIES}
    ${GCRYPT_LIBRARY}
  )
endif (GCRYPT_LIBRARY)

if (WITH_ZLIB)
  set(LIBMISC_PRIVATE_INCLUDE_DIRS
    ${LIBMISC_PRIVATE_INCLUDE_DIRS}
    ${ZLIB_INCLUDE_DIRS}
  )

  set(LIBMISC_LINK_LIBRARIES
    ${LIBMISC_LINK_LIBRARIES}
    ${ZLIB_LIBRARY}
  )
endif (WITH_ZLIB)

if (WITH_GSSAPI AND GSSAPI_FOUND)
  set(LIBMISC_PRIVATE_INCLUDE_DIRS
    ${LIBMISC_PRIVATE_INCLUDE_DIRS}
    ${GSSAPI_INCLUDE_DIR}
  )

  set(LIBMISC_LINK_LIBRARIES
    ${LIBMISC_LINK_LIBRARIES}
    ${GSSAPI_LIBRARIES}
  )
endif (WITH_GSSAPI AND GSSAPI_FOUND)

if (WITH_NACL AND NACL_FOUND)
  set(LIBMISC_PRIVATE_INCLUDE_DIRS
    ${LIBMISC_PRIVATE_INCLUDE_DIRS}
    ${NACL_INCLUDE_DIR}
  )

  set(LIBMISC_LINK_LIBRARIES
    ${LIBMISC_LINK_LIBRARIES}
    ${NACL_LIBRARY}
  )
endif (WITH_NACL AND NACL_FOUND)

set(LIBMISC_LINK_LIBRARIES
  ${LIBMISC_LINK_LIBRARIES}
  CACHE INTERNAL "libmisc link libraries"
)

set(LIBMISC_SHARED_LIBRARY
  misc_shared
  CACHE INTERNAL "libmisc shared library"
)

if (WITH_STATIC_LIB)
  set(LIBMISC_STATIC_LIBRARY
    misc_static
    CACHE INTERNAL "libmisc static library"
  )
endif (WITH_STATIC_LIB)

set(libmisc_SRCS
  api_misc.c
  api_log.c
)

include_directories(
  ${LIBMISC_PUBLIC_INCLUDE_DIRS}
  ${LIBMISC_PRIVATE_INCLUDE_DIRS}
)

add_library(${LIBMISC_SHARED_LIBRARY} SHARED ${libmisc_SRCS})

target_link_libraries(${LIBMISC_SHARED_LIBRARY} ${LIBMISC_LINK_LIBRARIES})

set_target_properties(
  ${LIBMISC_SHARED_LIBRARY}
    PROPERTIES
      VERSION
        ${LIBRARY_VERSION}
      SOVERSION
        ${LIBRARY_SOVERSION}
      OUTPUT_NAME
        misc
      DEFINE_SYMBOL
        API_EXPORTS
)

if (WITH_VISIBILITY_HIDDEN)
  set_target_properties(${LIBMISC_SHARED_LIBRARY} PROPERTIES COMPILE_FLAGS "-fvisibility=hidden")
endif (WITH_VISIBILITY_HIDDEN)


install(
  TARGETS
    ${LIBMISC_SHARED_LIBRARY}
  RUNTIME DESTINATION ${BIN_INSTALL_DIR}
  LIBRARY DESTINATION ${LIB_INSTALL_DIR}
  ARCHIVE DESTINATION ${LIB_INSTALL_DIR}
  COMPONENT libraries
)

if (WITH_STATIC_LIB)
  add_library(${LIBMISC_STATIC_LIBRARY} STATIC ${libmisc_SRCS})

  if (MSVC)
    set(OUTPUT_SUFFIX static)
  else (MSVC)
    set(OUTPUT_SUFFIX )
  endif (MSVC)
  set_target_properties(
    ${LIBMISC_STATIC_LIBRARY}
      PROPERTIES
        VERSION
          ${LIBRARY_VERSION}
        SOVERSION
          ${LIBRARY_SOVERSION}
        OUTPUT_NAME
          ssh
        ARCHIVE_OUTPUT_DIRECTORY
          ${CMAKE_CURRENT_BINARY_DIR}/${OUTPUT_SUFFIX}
  )

  if (WIN32)
    set_target_properties(
      ${LIBMISC_STATIC_LIBRARY}
        PROPERTIES
          COMPILE_FLAGS
            "-DAPI_STATIC"
    )
  endif (WIN32)

  install(
    TARGETS
      ${LIBMISC_STATIC_LIBRARY}
    DESTINATION
      ${LIB_INSTALL_DIR}/${OUTPUT_SUFFIX}
    COMPONENT
      libraries
  )
endif (WITH_STATIC_LIB)

